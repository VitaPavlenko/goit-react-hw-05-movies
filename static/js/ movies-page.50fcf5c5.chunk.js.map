{"version":3,"file":"static/js/ movies-page.50fcf5c5.chunk.js","mappings":"uMA8DA,UA3DmB,WAAO,IAAD,EACvB,GAAwBA,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KACQC,GAAQC,EAAAA,EAAAA,MAARD,IACFE,GAAWC,EAAAA,EAAAA,OAQjBC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,GAAgBP,GAAUQ,KAAKT,KAC9B,CAACC,IAEJS,QAAQC,IAAIZ,GAUZ,OACE,iCACE,kBAAMa,SAVO,SAAAC,GACfA,EAAEC,iBAEGb,IACLC,EAAYD,GACZD,EAAQD,KAKN,WACE,kBACEgB,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,SA5BiB,SAAAC,GACvBT,QAAQC,IAAIQ,EAAMC,cAAcC,OAChC,IAAMC,EAAaH,EAAMC,cAAcC,MAAME,OAE7CrB,EAAYoB,EAAWE,mBA0BnB,mBAAQT,KAAK,SAAb,UACE,0CAGHhB,IACC,+BACGA,QADH,IACGA,GADH,UACGA,EAAM0B,eADT,aACG,EAAeC,KAAI,SAAAC,GAAG,OACrB,yBACE,UAAC,KAAD,CACEC,GAAI,CACFC,SAAS,GAAD,OAAK1B,EAAL,YAAYwB,EAAIG,IACxBC,MAAO,CAAEC,KAAM3B,IAHnB,UAMGsB,EAAIM,MANP,IAMeN,EAAIO,kBAPZP,EAAIG,c,oLC7CnBK,EAAW,+BAEXC,EAAM,mCAAZ,SAEeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,2GAAsClC,EAAtC,+BAA4C,GAAImC,EAAhD,+BAAyD,GAAzD,SACyBC,MAAMpC,EAAKmC,GADpC,YACQE,EADR,QAEkBC,GAFlB,iCAGYD,EAASE,OAHrB,gDAIMC,QAAQC,OAAO,IAAIC,MAAM,cAJ/B,2GAOO,SAASC,IACd,OAAOT,EAAuB,GAAD,OACxBF,EADwB,qCACaC,EADb,2BAKxB,SAASW,EAAY9C,GAC1B,OAAOoC,EAAuB,GAAD,OACxBF,EADwB,iCACSC,EADT,kBACsBnC,IAI9C,SAAS+C,EAAkBC,GAChC,OAAOZ,EAAuB,GAAD,OAAIF,EAAJ,kBAAsBc,EAAtB,oBAA0Cb,IAGlE,SAASc,EAAkBD,GAChC,OAAOZ,EAAuB,GAAD,OACxBF,EADwB,kBACNc,EADM,4BACsBb,IAI9C,SAASe,EAAkBF,GAChC,OAAOZ,EAAuB,GAAD,OACxBF,EADwB,kBACNc,EADM,4BACsBb","sources":["page/MoviesPage.js","services/api.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport * as api from '../services/api';\nimport { Link, useRouteMatch, useLocation } from 'react-router-dom';\nconst MoviesPage = () => {\n  const [hits, setHits] = useState([]);\n  const [newImput, setNewImput] = useState('');\n  const { url } = useRouteMatch();\n  const location = useLocation();\n  const handleNameChange = event => {\n    console.log(event.currentTarget.value);\n    const inputValue = event.currentTarget.value.trim();\n\n    setNewImput(inputValue.toLowerCase());\n  };\n\n  useEffect(() => {\n    api.fetchSearch(newImput).then(setHits);\n  }, [newImput]);\n\n  console.log(hits);\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    if (!newImput) return;\n    setNewImput(newImput);\n    setHits(hits);\n  };\n\n  return (\n    <>\n      <form onSubmit={onSubmit}>\n        <input\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          onChange={handleNameChange}\n        />\n        <button type=\"submit\">\n          <span>Search</span>\n        </button>\n      </form>\n      {hits && (\n        <ul>\n          {hits?.results?.map(hit => (\n            <li key={hit.id}>\n              <Link\n                to={{\n                  pathname: `${url}/${hit.id}`,\n                  state: { from: location },\n                }}\n              >\n                {hit.title} {hit.original_name}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default MoviesPage;\n","const BASE_URL = 'https://api.themoviedb.org/3';\n\nconst KEY = '04410cb9529346f79ec1f657731e9f8f';\n\nasync function fetchWithErrorHandling(url = '', config = {}) {\n  const response = await fetch(url, config);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('Not found'));\n}\n\nexport function fetchTrending() {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/trending/all/day?api_key=${KEY}&language=en-US&page=3`\n  );\n}\n\nexport function fetchSearch(newImput) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/search/movie?api_key=${KEY}&query=${newImput}`\n  );\n}\n\nexport function fetchMovieDetails(moviesId) {\n  return fetchWithErrorHandling(`${BASE_URL}/movie/${moviesId}?api_key=${KEY}`);\n}\n\nexport function fetchMovieCredits(moviesId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${moviesId}/credits?api_key=${KEY}`\n  );\n}\n\nexport function fetchMovieReviews(moviesId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${moviesId}/reviews?api_key=${KEY}`\n  );\n}\n"],"names":["useState","hits","setHits","newImput","setNewImput","url","useRouteMatch","location","useLocation","useEffect","api","then","console","log","onSubmit","e","preventDefault","type","autoComplete","autoFocus","onChange","event","currentTarget","value","inputValue","trim","toLowerCase","results","map","hit","to","pathname","id","state","from","title","original_name","BASE_URL","KEY","fetchWithErrorHandling","config","fetch","response","ok","json","Promise","reject","Error","fetchTrending","fetchSearch","fetchMovieDetails","moviesId","fetchMovieCredits","fetchMovieReviews"],"sourceRoot":""}